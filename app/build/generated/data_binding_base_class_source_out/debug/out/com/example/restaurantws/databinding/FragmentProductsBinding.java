// Generated by view binder compiler. Do not edit!
package com.example.restaurantws.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.restaurantws.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentProductsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialCardView cardProducts;

  @NonNull
  public final ConstraintLayout frameLayout;

  @NonNull
  public final CustomHeaderBinding productsHeader;

  @NonNull
  public final ProgressBar progressBarProduct;

  @NonNull
  public final RecyclerView rcViewProducts;

  private FragmentProductsBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialCardView cardProducts, @NonNull ConstraintLayout frameLayout,
      @NonNull CustomHeaderBinding productsHeader, @NonNull ProgressBar progressBarProduct,
      @NonNull RecyclerView rcViewProducts) {
    this.rootView = rootView;
    this.cardProducts = cardProducts;
    this.frameLayout = frameLayout;
    this.productsHeader = productsHeader;
    this.progressBarProduct = progressBarProduct;
    this.rcViewProducts = rcViewProducts;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentProductsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentProductsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_products, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentProductsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardProducts;
      MaterialCardView cardProducts = ViewBindings.findChildViewById(rootView, id);
      if (cardProducts == null) {
        break missingId;
      }

      ConstraintLayout frameLayout = (ConstraintLayout) rootView;

      id = R.id.productsHeader;
      View productsHeader = ViewBindings.findChildViewById(rootView, id);
      if (productsHeader == null) {
        break missingId;
      }
      CustomHeaderBinding binding_productsHeader = CustomHeaderBinding.bind(productsHeader);

      id = R.id.progressBarProduct;
      ProgressBar progressBarProduct = ViewBindings.findChildViewById(rootView, id);
      if (progressBarProduct == null) {
        break missingId;
      }

      id = R.id.rcViewProducts;
      RecyclerView rcViewProducts = ViewBindings.findChildViewById(rootView, id);
      if (rcViewProducts == null) {
        break missingId;
      }

      return new FragmentProductsBinding((ConstraintLayout) rootView, cardProducts, frameLayout,
          binding_productsHeader, progressBarProduct, rcViewProducts);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
